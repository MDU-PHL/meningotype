# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    tags:
      - v*
    branches:
      - 'master'
      - 'main'
    paths:
      - '**.py'
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    branches: [ master ]
    inputs:
      tags:
        description: "Testing workflow"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        blast-version: [2.9.0, 2.10.1, 2.11.0]

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge, bioconda
        activate-environment: meningotype
    - name: Install BLAST
      shell: bash -l {0}
      run: |
        conda install blast=${{matrix.blast-version}}
    - name: Install LisSero and dependencies
      shell: bash -l {0}
      run: |
        conda install flake8 ispcr mlst
        pip install .
    - name: Lint with flake8
      shell: bash -l {0}
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      shell: bash -l {0}
      run: |
        meningotype --test

  build-n-publish:
      name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
      needs: test
      runs-on: ubuntu-18.04
      steps:
        - uses: actions/checkout@master
        - name: Set up Python 3.7
          uses: actions/setup-python@v1
          with:
            python-version: 3.7
        - name: Install pypa/build
          run: >-
            python -m
            pip install
            build
            --user
        - name: Build a binary wheel and a source tarball
          run: >-
            python -m
            build
            --sdist
            --wheel
            --outdir dist/
            .
        - name: Publish distribution 📦 to Test PyPI
          uses: pypa/gh-action-pypi-publish@master
          with:
            user: __token__
            password: ${{ secrets.test_pypi_password }}
            repository_url: https://test.pypi.org/legacy/
            skip_existing: true
        - name: Publish distribution 📦 to PyPI
          if: startsWith(github.ref, 'refs/tags') || startsWith(github.event.inputs.tags, 'Deploy')
          uses: pypa/gh-action-pypi-publish@master
          with:
            user: __token__
            password: ${{ secrets.pypi_password }}
